[buildout]
extends =
    http://dist.plone.org/release/5.1.5/versions.cfg
    versions.cfg

show-picked-versions = false
extensions = mr.developer

parts =
    code-analysis
    coverage
    createcoverage
    i18ndude
    i18nize-webapp
    instance
    omelette
    releaser
    robot
    test
    test-coverage

languages = de
develop = .


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars = zope_i18n_compile_mo_files true
eggs =
    Plone
    Pillow
    Products.CMFPlone
    operun.contactform [test]


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/operun
multiprocessing = True

chameleon-lint = False
xmllint = True

# Integration
return-status-codes = True
find-untranslated = False
i18ndude-bin = ${buildout:bin-directory}/i18ndude

# Flake8
flake8 = True
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg,*.cpy,*.vpy,overrides,omelette

# Flake8 - Plugins
# https://github.com/plone/plone.recipe.codeanalysis#recommended-extra
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-isort
    flake8-plone-api
    flake8-quotes
    flake8-string-format

flake8-max-complexity = 15

# Git Commit
pre-commit-hook = True
pre-commit-hook-return-status-codes = True

# Git Push
pre-push-hook = False
pre-push-hook-return-status-codes = False


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'operun.contactform', '--auto-color', '--auto-progress']


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
output = ${buildout:directory}/bin/test-coverage
mode = 755


[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]
scripts =
    robot
    robot-server


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude


[i18nize-webapp]
recipe = collective.recipe.template
input = ${buildout:directory}/scripts/i18nize.in
output = ${buildout:bin-directory}/i18nize-webapp
mode = 775
dollar = $
domain = operun.contactform
packagepath = ${buildout:directory}/src/operun/contactform
languages = ${buildout:languages}
